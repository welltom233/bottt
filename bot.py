import os
import time
import telebot
import re

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
TOKEN = "7986971342:AAFCKyHQ7oj2RPEJfxG66CtnUqxFbnuXjG8"
bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
files_data = {}
# –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ (–±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
all_links = set()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –∏–∑ —Ç–µ–∫—Å—Ç–∞
def extract_links(text):
    pattern = r"https?://[^\s]+"
    return set(re.findall(pattern, text))

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start_message(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(telebot.types.KeyboardButton("–°—Ç–∞—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏"))
    
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ TXT-—Ñ–∞–π–ª—ã, –∞ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏ '–°—Ç–∞—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏'.",
        reply_markup=markup
    )
    files_data[message.chat.id] = []

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
@bot.message_handler(content_types=["document"])
def handle_docs(message):
    chat_id = message.chat.id
    if chat_id not in files_data:
        files_data[chat_id] = []
    
    file_info = bot.get_file(message.document.file_id)
    file = bot.download_file(file_info.file_path)
    
    text = file.decode("utf-8")  # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ —Ç–µ–∫—Å—Ç
    files_data[chat_id].append(text)
    
    bot.send_message(chat_id, f"–§–∞–π–ª `{message.document.file_name}` –∑–∞–≥—Ä—É–∂–µ–Ω!", parse_mode="Markdown")

# –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤
@bot.message_handler(func=lambda message: message.text == "–°—Ç–∞—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏")
def start_processing(message):
    chat_id = message.chat.id
    if chat_id not in files_data or not files_data[chat_id]:
        bot.send_message(chat_id, "–¢—ã –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª —Ñ–∞–π–ª—ã!")
        return
    
    start_time = time.time()
    extracted_links = set()

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for text in files_data[chat_id]:
        extracted_links.update(extract_links(text))

    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ –≤—Å–µ–º–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏)
    new_links = extracted_links - all_links
    all_links.update(new_links)

    end_time = time.time()
    elapsed_time = round(end_time - start_time, 2)

    # –û—Ç—á—ë—Ç –æ —Ä–∞–±–æ—Ç–µ
    report = (
        f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
        f"üìÇ –§–∞–π–ª–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(files_data[chat_id])}\n"
        f"üîó –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {len(extracted_links)}\n"
        f"üóëÔ∏è –î—É–±–ª–∏–∫–∞—Ç–æ–≤ —É–¥–∞–ª–µ–Ω–æ: {len(extracted_links) - len(new_links)}\n"
        f"‚úÖ –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫: {len(new_links)}\n"
        f"‚è≥ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {elapsed_time} —Å–µ–∫"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç
    bot.send_message(chat_id, report)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
    if new_links:
        bot.send_message(chat_id, "\n".join(new_links[:50]))  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ 50 —Å—Å—ã–ª–æ–∫ (—á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å)
    
    # –û—á–∏—â–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (—á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª –æ–±—Ä–∞–±–æ—Ç–∫—É)
    files_data[chat_id] = []

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
